# nacos.register.host=127.0.0.1
# data.host=127.0.0.1
server.port=8005

################ SpringDoc 配置
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
#springdoc.api-docs.enabled=true
#springdoc.api-docs.path=/v3/api-docs
# springdoc.group-configs[0].group=book
# springdoc.group-configs[0].packages-to-scan=com.yfh.bookstore.ddd.adapter.web
# springdoc.group-configs[0].paths-to-match=/book/**
# springdoc.group-configs[1].group=category
# springdoc.group-configs[1].packages-to-scan=com.yfh.bookstore.ddd.adapter.web
# springdoc.group-configs[1].paths-to-match=/category/**
# springdoc.group-configs[2].group=tag
# springdoc.group-configs[2].packages-to-scan=com.yfh.bookstore.ddd.adapter.web
# springdoc.group-configs[2].paths-to-match=/tag/**


################ bsecurity.token starter 配置
bsecurity.token.mode=proxy
bsecurity.token.proxy-target-service-name=user-register-service

################ HikariDataSource 配置
spring.datasource.primary.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.primary.url=jdbc:mysql://${data.host}:3306/bookstore
spring.datasource.primary.username=root
spring.datasource.primary.password=admin

spring.datasource.quartz.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.quartz.url=jdbc:mysql://${data.host}:3306/quartz
spring.datasource.quartz.username=root
spring.datasource.quartz.password=admin


spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=600000
#最长生命周期, 默认1800000, 30分钟
spring.datasource.hikari.max-lifetime=540000
spring.datasource.hikari.connection-timeout=60000   
spring.datasource.hikari.connection-test-query=SELECT 1

################ Mybatis / Mybatis-plus 配置
mybatis-plus.mapper-locations=classpath:mapper/*.xml
mybatis-plus.global-config.db-config.logic-delete-field="delFlag"
mybatis-plus.global-config.db-config.logic-delete-value=1
mybatis-plus.global-config.db-config.logic-not-delete-value=0

################ Graphqls 配置
#graphql.tools.schema-location-pattern=classpath:graphql/*.graphqls


################ logging 配置
logging.config=classpath:logback-spring.xml
logging.level.org.springframework=INFO

################ actuator 配置
management.server.address=127.0.0.1
management.server.port=8010
management.endpoints.web.base-path=/mgnt
management.endpoints.jmx.exposure.exclude=*
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


################ Nacos Register Service 配置
spring.cloud.nacos.discovery.enabled=true
spring.cloud.nacos.discovery.server-addr=${nacos.register.host}:8848
spring.cloud.nacos.discovery.namespace=92d8bb14-3a67-4cfc-a414-a9b7c11a44e1
spring.cloud.nacos.discovery.username=springfm
spring.cloud.nacos.discovery.password=springfm
spring.cloud.nacos.discovery.metadata.management.context-path=${management.endpoints.web.base-path}

################ doubbo LoginService Consume配置
dubbo.application.enable-file-cache=false
dubbo.registry.address=nacos://${nacos.register.host}:8848
dubbo.registry.parameters.namespace=92d8bb14-3a67-4cfc-a414-a9b7c11a44e1
dubbo.registry.register=false
dubbo.registry.username=springfm
dubbo.registry.password=springfm

################ OpenFeign配置
# feign.httpclient.ok-http.read-timeout=5000
# feign.httpclient.connection-timeout=10000 

# feign.biz.registerclient=user-register-service

################ redis配置 
spring.redis.host=${data.host}
spring.redis.port=6379
spring.redis.timeout=10000

################ rabbitmq配置
spring.rabbitmq.host=${data.host}
spring.rabbitmq.port=5672
spring.rabbitmq.username=tester
spring.rabbitmq.password=admin
spring.rabbitmq.virtual-host=DevTest

################ quartz集群配置 
# quartz datasource conf
# spring.quartz.properties.org.quartz.jobStore.dataSource=quartzDataSource
# spring.quartz.properties.org.quartz.dataSource.quartzDataSource.driver-class-name=com.mysql.jdbc.Driver
# spring.quartz.properties.org.quartz.dataSource.quartzDataSource.url=jdbc:mysql://${data.host}:3306/quartz
# spring.quartz.properties.org.quartz.dataSource.quartzDataSource.username=root
# spring.quartz.properties.org.quartz.dataSource.quartzDataSource.password=admin

# 设置quartz任务的数据持久化方式，默认是内存方式，配置JDBC以使用数据库方式持久化任务
spring.quartz.job-store-type=jdbc
# 调度标识名 集群中每一个实例都必须使用相同的名称    
spring.quartz.properties.org.quartz.scheduler.instanceName=ComplianceAuditQuartzScheduler
# ID设置为自动获取 每一个必须不同  
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.scheduler.makeSchedulerThreadDaemon=true
# 线程池的实现类（一般使用SimpleThreadPool即可满足需求）  
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
# 指定在线程池里面创建的线程是否是守护线程
spring.quartz.properties.org.quartz.threadPool.makeThreadsDaemons=true
# 指定线程数，至少为1（无默认值）
spring.quartz.properties.org.quartz.threadPool.threadCount:10
# 设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5） 
spring.quartz.properties.org.quartz.threadPool.threadPriority:5
# 自创建父线程
spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true
# 数据保存方式为数据库持久化  
spring.quartz.properties.org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
# 数据库代理类，一般org.quartz.impl.jdbcjobstore.StdJDBCDelegate可以满足大部分数据库  
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 表的前缀，默认QRTZ_  
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
# 是否加入集群
spring.quartz.properties.org.quartz.jobStore.isClustered=true
# 检入到数据库中的频率(单位毫秒)。clusterChedkinInterval越小，Scheduler节点检查失败的 Scheduler实例就越频繁。默认值是 15000(即15秒)。
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=20000
# 设置调度引擎对触发器超时的忍耐时间 (单位毫秒)
spring.quartz.properties.org.quartz.jobStore.misfireThreshold=60000